name: Terraform + Build and Push Docker Images to ECR

on:
  push:
    branches:
      - main

jobs:
  terraform-and-docker:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      TF_WORKING_DIR: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Terraform Init
      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false

      # Terraform Apply
      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve -input=false

      # Get ECR repo URL from Terraform output
      - name: Get ECR URL
        id: ecr
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          REPO_URL=$(terraform output -raw demo_repo_url)
          echo "repo=$REPO_URL" >> $GITHUB_OUTPUT
          echo "registry=$(echo $REPO_URL | cut -d'/' -f1)" >> $GITHUB_OUTPUT

      # âœ… Set up Docker (adds docker/buildx, ensures docker CLI works)
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Login Docker to ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin ${{ steps.ecr.outputs.registry }}

      # Build and push Docker images from images.txt
      - name: Build & Push Docker Image
        run: |
          IMAGE_NAME=$(echo "${{ matrix.image }}" | cut -d: -f1)
          IMAGE_TAG=$(echo "${{ matrix.image }}" | cut -d: -f2)

          echo "Building and Pushing $IMAGE_NAME:$IMAGE_TAG"
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker tag $IMAGE_NAME:$IMAGE_TAG ${{ steps.ecr.outputs.registry }}/ghdemoecr:$IMAGE_TAG
          docker push ${{ steps.ecr.outputs.registry }}/ghdemoecr:$IMAGE_TAG
